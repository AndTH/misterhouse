# Category=Internet


##################################################################
#  For 3Com ISDN Lan Modem                                       #
#  Get the IP address of the current Internet call               #
#  Set TZO dynamic DNS to that IP address                        #
#                                                                #
#  By: Danal Estes , N5SVV                                       #
#  E-Mail: danal@earthling.net                                   #
#                                                                #
##################################################################

# The ISDN Lan Modem at Software level 5.3.1 and above broadcast an Ethernet packet
# periodically and at certain event triggers.
#
# Unfortunately, these packets (as of 5.3.1) do not contain the IP address of the
# other end of the call.
#
# So, we will pull the web page that contains call stats, parse it, and extract
# the IP address via which we're currently attached to the internet.
#
# We will then use TZO service to update a dynamic DNS entry.  Thanks to Bruce Winter
# for the core of the TZO code.

# First, read MH parm files, we need various parts later...

BEGIN {
    ($Version) = q$Revision$ =~ /: (\S+)/; # Note: revision number is auto-updated by cvs
    ($Pgm_Path, $Pgm_Name) = $0 =~ /(.*)[\\\/](.+)\.?/;
    ($Pgm_Name) = $0 =~ /([^.]+)/, $Pgm_Path = '.' unless $Pgm_Name;
    $Pgm_Root = "$Pgm_Path/..";
    eval "use lib '$Pgm_Path/../lib', '$Pgm_Path/../lib/site'"; # Use BEGIN eval to keep perl2exe happy
}

require 'handy_utilities.pl';

my $private_parms = $Pgm_Path . "/mh.private.ini";
&main::read_opts(\%config_parms, $Pgm_Path . "/mh.ini");
&main::read_opts(\%config_parms, $private_parms) if -e $private_parms;

my $isp = $config_parms{isdn_internet};
die "MH.INI parm isdn_internet missing" if $isp eq '';
die "TZO information missing" if !$config_parms{tzo_key};

# Set up to do web requests
# Note: misterhouse provided "get_url" subroutine does NOT work 
# with TZO's web site.  We do our own requests...!

use LWP::UserAgent;
my $ua = new LWP::UserAgent;
$ua->timeout([120]);         # Time out after 60 seconds 
$ua->env_proxy(); 

# Now, read web page from 3com ISDN Lan Modem and find IP address associated with internet data call
# If were invoked right as call is coming up, service provider name may be in the web page, but
# the IP address can still be all zeros.  Loop/sleep as required if this happens.

my $ip = '0.0.0.0';
while ($ip eq '0.0.0.0') {
  my $request = new HTTP::Request('GET', 'http://lanmodem/stat3.htm');
  my $response = $ua->request($request);
  die "HTTP Error $response->status_line" if $response->is_error();
  my $text = $response->content();

  # Delete text preceeding the Service Provider names of the calls
  $text =~ s/^.+?Dial-In User<\/td>//s;
  # Delete label for "IP address in use"
  $text =~ s/<td>IP address in use.*?<\/td>//s;
  # Pick next four table data elements as name/address pairs
  my ($n1, $n2, $a1, $a2) = $text =~ /(?:<td>)(.*?)(?:<\/td>)(?:.*?)(?:<td>)(.*?)(?:<\/td>)(?:.*?)(?:<td>)(.*?)(?:<\/td>)(?:.*?)(?:<td>)(.*?)(?:<\/td>)(?:.*?)/s;

  $ip = $a1 if $n1 eq $isp;
  $ip = $a2 if $n2 eq $isp;

  die "No active data call found for $isp" if $ip eq '';

  if ($ip eq '0.0.0.0') {
    sleep 2;
  } else {
    print "IP address for data call to \"$isp\" is \"$ip\"\n";
  }

}


# End of 3com code; beginning of TZO code

print "Updating tzo.com with dynamic ip address of $ip\n";



  my $url  = "http://cgi.tzo.com/webclient/signedon.html?";
  $url .= "TZOName=$config_parms{tzo_name}";
  $url .= "&Email=$config_parms{tzo_email}";
  $url .= "&TZOKey=$config_parms{tzo_key}";
  $url .= "&select=6";
  $url .= "&IPAddress=$ip";
  $url .= "&B1=Sign+on+to+the+TZO+DNS+servers";
             
  my $request = new HTTP::Request('GET', $url);
  my $response = $ua->request($request);
  die "HTTP Error $response->status_line" if $response->is_error();
  my $rc = $response->content();

  die "TZO Error; probably bad parms" if $rc =~ /Error/;

  print "Update successful for tzo.com with dynamic ip address of $ip\n";
