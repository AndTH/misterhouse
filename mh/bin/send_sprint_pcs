#!/usr/bin/perl
# -*- Perl -*-

#---------------------------------------------------------------------
#
# File:
#     send_sprint_pcs
# Description:
#     A perl script for sending a text string to a Sprint PCS phone
#     Phone/User must have sprint text messaging subscription
# Author:
#     Danal Estes       danal@earthling.net       N5SVV
# Change log:
#   - 01/28/00 v 1.0 Created
#
#  This software is licensed under the terms of the GNU public license.  
#  Copyright 1999, 2000 Danal Estes
#-----------------------------------------------------------------------

use strict;

my ($Pgm_Path, $Pgm_Name, $Version);
use vars '$Pgm_Root';           # So we can see it in eval var subs in read_parms

BEGIN {
    ($Version) = q$Revision$ =~ /: (\S+)/; # Note: revision number is auto-updated by cvs
    ($Pgm_Path, $Pgm_Name) = $0 =~ /(.*)[\\\/](.+)\.?/;
    ($Pgm_Name) = $0 =~ /([^.]+)/, $Pgm_Path = '.' unless $Pgm_Name;
    $Pgm_Root = "$Pgm_Path/..";
    eval "use lib '$Pgm_Path/../lib', '$Pgm_Path/../lib/site'"; # Use BEGIN eval to keep perl2exe happy
}


use Getopt::Long;
my %parms;
if (!&GetOptions(\%parms, "h", "help", "text=s", "to=s") or 
    @ARGV or $parms{h} or $parms{help} or !$parms{text} or !$parms{to}) {  
    print<<eof; 

$Pgm_Name (version $Version) sends message to Sprint PCS telephone

  Usage: 

    $Pgm_Name [options]

      -h              => This help text
      -help           => This help text
      -to 9999999999  => Sprint PCS phone number (10 digits)
             or
      -to xxxx        => name in mh.ini as "sprint_pcs_xxxx_number=8005551212
      -text xxx       => text of message to send

  Example:
    $Pgm_Name -to 8885551212 -text "This is a test"
    $Pgm_Name -to danal -text "This is a test"

eof

  exit; 
}

my (%phone_numbers);
&setup;

$parms{to} = $phone_numbers{$parms{to}} unless $parms{to} =~ /(\d+)/;
unless ($parms{to}) {
    print "\nsend_sprint_pcs: You must specify -to 8005551212 option \n";
    print "or put 'sprint_pcs_NAME_number=8005551212' in mh.ini and specify -to NAME option.\n\n";
    exit;
}


&send_page ($parms{to}, "$parms{text}");

#------

use vars "%config_parms";
sub setup {

    require 'handy_utilities.pl';

    my $private_parms = $Pgm_Path . "/mh.private.ini";
    &main::read_opts(\%config_parms, $Pgm_Path . "/mh.ini");
    &main::read_opts(\%config_parms, $private_parms) if -e $private_parms;

                                # Get pcs phone parms
    for my $parm (keys %config_parms) {
        next unless $config_parms{$parm}; # Ingore blank parms
        $phone_numbers{$1} = $config_parms{$parm} if $parm =~ /sprint_pcs_(\S+)_number/;
    }

    for my $name (keys %phone_numbers) {
        print "send_sprint_pcs: $name=$phone_numbers{$name}\n" if $config_parms{debug} eq 'pcs';
    }
}

sub send_page {
    
    my ($to, $text) = @_;

    print "send sprint pcs: to=$to, $text\n" if $config_parms{debug} eq 'pcs';

    require 'handy_net_utilities.pl';

    if (&net_connect_check) {
      use Net::SMTP;
      my $server = 'www.messaging.sprintpcs.com';
      my $smtp;
      print "send_sprint_pcs: Logging into mail server $server\n";
       unless ($smtp = Net::SMTP->new($server, Timeout => 300, Debug => $parms{debug})) {
           print "send_sprint_pcs: Unable to log into mail server $server: $@\n";
           return;
       }
       $smtp->mail('Mister House');  # From Mister House
       $smtp->to("$to\@messaging.sprintpcs.com");
       $smtp->data("Subject: $text\n");
       $smtp->quit;
       print "send_sprint_pcs: Sprint PCS message '$text' sent to $to\n";
    }
    else {
        print "\n\nsend_sprint_pcs: Can not send Sprint PCS message; not on Internet\n\n";
    }
}

